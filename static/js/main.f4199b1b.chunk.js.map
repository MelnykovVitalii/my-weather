{"version":3,"sources":["Components/Card.jsx","Components/Weather.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","temperature","Math","round","temp","className","city","country","toString","description","src","icon","alt","Weather","useState","error","setError","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","then","res","json","result","name","county","sys","weather","main","message","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAgCeA,MA9Bf,SAAcC,GACb,IAAMC,EAAcC,KAAKC,MAAMH,EAAMI,KAAO,KAC5C,OACC,sBAAKC,UAAU,OAAf,UACC,sBAAKA,UAAU,aAAf,UACC,qBAAKA,UAAU,YAAf,SACC,iCAAOL,EAAMM,KAAb,SAED,qBAAKD,UAAU,eAAf,SACC,+BAAOL,EAAMO,eAGf,qBAAKF,UAAU,aAAf,SACC,sBAAKA,UAAU,OAAf,UACC,+BAAOJ,EAAYO,aACnB,0CAAqB,SAGvB,sBAAKH,UAAU,eAAf,UACC,8BACC,sBAAMA,UAAU,cAAhB,SAA+BL,EAAMS,gBAEtC,8BACC,qBAAKC,IAAG,4CAAuCV,EAAMW,KAA7C,WAA4DN,UAAU,MAAMO,IAAI,c,MC0B9EC,MAhDf,WACC,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAyBA,OAvBAC,qBAAU,WACTC,MAAM,yGACJC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MACA,SAACG,GAEAR,GAAY,GACZE,EAAS,CACRd,KAAMoB,EAAOC,KACbC,OAAQF,EAAOG,IAAItB,QACnBE,YAAaiB,EAAOI,QAAQ,GAAGrB,YAC/BE,KAAMe,EAAOI,QAAQ,GAAGnB,KACxBP,KAAMsB,EAAOK,KAAK3B,UAIpB,SAACW,GACAG,GAAY,GACZF,EAASD,QAGV,IAECA,EACI,yEAAcA,EAAMiB,YAChBf,GAAYE,EAAMY,KAEtB,sFAGN,qBAAK1B,UAAU,UAAf,SACC,cAAC,EAAD,CACCC,KAAMa,EAAMb,KACZC,QAASY,EAAMS,OACfnB,YAAaU,EAAMV,YACnBE,KAAMQ,EAAMR,KACZP,KAAMe,EAAMf,UC9BF6B,MAXf,WACC,OACC,sBAAK5B,UAAU,MAAf,UACC,qBAAKA,UAAU,SAAf,SACC,mDAED,cAAC,EAAD,QCGY6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBZ,M","file":"static/js/main.f4199b1b.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nfunction Card(props) {\r\n\tconst temperature = Math.round(props.temp - 273);\r\n\treturn (\r\n\t\t<div className=\"card\">\r\n\t\t\t<div className=\"card__head\">\r\n\t\t\t\t<div className=\"city-name\">\r\n\t\t\t\t\t<span>{props.city},</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"country-name\">\r\n\t\t\t\t\t<span>{props.country}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"card__body\">\r\n\t\t\t\t<div className=\"temp\">\r\n\t\t\t\t\t<span>{temperature.toString()}</span>\r\n\t\t\t\t\t<span>&#8451;</span>{' '}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"card__footer\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span className=\"description\">{props.description}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<img src={`https://openweathermap.org/img/wn/${props.icon}@2x.png`} className=\"img\" alt=\"\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;\r\n","import { useEffect, useState } from 'react';\r\nimport Card from './Card';\r\nimport './Weather.css';\r\nfunction Weather() {\r\n\tconst [error, setError] = useState(null);\r\n\tconst [isLoaded, setIsLoaded] = useState(false);\r\n\tconst [items, setItems] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch('https://api.openweathermap.org/data/2.5/weather?q=Vapnyarka,ua&appid=23d735b0cff843665f2f29f7790ab395')\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then(\r\n\t\t\t\t(result) => {\r\n\t\t\t\t\t// console.log(result);\r\n\t\t\t\t\tsetIsLoaded(true);\r\n\t\t\t\t\tsetItems({\r\n\t\t\t\t\t\tcity: result.name,\r\n\t\t\t\t\t\tcounty: result.sys.country,\r\n\t\t\t\t\t\tdescription: result.weather[0].description,\r\n\t\t\t\t\t\ticon: result.weather[0].icon,\r\n\t\t\t\t\t\ttemp: result.main.temp,\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\t(error) => {\r\n\t\t\t\t\tsetIsLoaded(true);\r\n\t\t\t\t\tsetError(error);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t}, []);\r\n\r\n\tif (error) {\r\n\t\treturn <div>Ошибка: {error.message}</div>;\r\n\t} else if (!isLoaded && items.main) {\r\n\t\t// console.log(items);\r\n\t\treturn <div>Загрузка...</div>;\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t<Card\r\n\t\t\t\t\tcity={items.city}\r\n\t\t\t\t\tcountry={items.county}\r\n\t\t\t\t\tdescription={items.description}\r\n\t\t\t\t\ticon={items.icon}\r\n\t\t\t\t\ttemp={items.temp}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Weather;\r\n","import './App.css';\nimport Weather from './Components/Weather';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"header\">\n\t\t\t\t<span>Weather today</span>\n\t\t\t</div>\n\t\t\t<Weather />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}